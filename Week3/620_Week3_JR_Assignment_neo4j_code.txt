//Delete any existing nodes

match (n) detach delete n

//Load CSV file from GitHub and create relationship between Bitcoin Customers

LOAD CSV FROM "https://raw.githubusercontent.com/jey1987/DATA_620/master/soc-sign-bitcoinotc_2.csv" AS line
MERGE (src:Customer {name: line[0]})
MERGE (tgt:Customer {name: line[1]})
MERGE (src)-[r:RATES]->(tgt)
ON CREATE SET r.rating = toInt(line[2])

//Relationships between Customers 

MATCH p=(:Customer)-[:RATES]-(:Customer)
RETURN p

//Number of Customers 

MATCH (c:Customer) RETURN count(c)

//Summary of the Relationships

MATCH (c:Customer)-[:RATES]->()
WITH c, count(*) AS num
RETURN min(num) AS min, max(num) AS max, avg(num) AS avg_customers, stdev(num) AS stdev

//Shortest Path between Relationships (Diameter of Graph)

MATCH (a:Customer), (b:Customer) WHERE id(a) > id(b)
MATCH p=shortestPath((a)-[:RATES*]-(b))
RETURN length(p) AS len, extract(x IN nodes(p) | x.name) AS path
ORDER BY len DESC LIMIT 4

// The Diameter of Graph is 6

//Degree of the Relationships 

MATCH (c:Customer)
RETURN c.name AS Customer, size( (c)-[:RATES]-() ) AS degree ORDER BY degree DESC